local Theme = {}
if getgenv().Theme == "Red" then -- >> Theme by GPT
    Theme = {
        PrimaryBackgroundColor = Color3.fromRGB(45, 15, 15),
        SecondaryBackgroundColor = Color3.fromRGB(65, 25, 25),
        TertiaryBackgroundColor = Color3.fromRGB(100, 45, 45),
        TabBackgroundColor = Color3.fromRGB(85, 35, 35),
        PrimaryTextColor = Color3.fromRGB(250, 210, 210),
        SecondaryTextColor = Color3.fromRGB(230, 190, 190),
        PrimaryColor = Color3.fromRGB(235, 80, 80),
        ScrollingBarImageColor = Color3.fromRGB(150, 70, 70),
        Line = Color3.fromRGB(110, 50, 50)
    }
elseif getgenv().Theme == "Blue" then
    Theme = {
        PrimaryBackgroundColor = Color3.fromRGB(15, 15, 45),
        SecondaryBackgroundColor = Color3.fromRGB(25, 25, 65),
        TertiaryBackgroundColor = Color3.fromRGB(45, 45, 100),
        TabBackgroundColor = Color3.fromRGB(35, 35, 85),
        PrimaryTextColor = Color3.fromRGB(210, 210, 250),
        SecondaryTextColor = Color3.fromRGB(190, 190, 230),
        PrimaryColor = Color3.fromRGB(80, 80, 235),
        ScrollingBarImageColor = Color3.fromRGB(70, 70, 150),
        Line = Color3.fromRGB(50, 50, 110)
    }
elseif getgenv().Theme == "Green" then
    Theme = {
        PrimaryBackgroundColor = Color3.fromRGB(15, 45, 15),
        SecondaryBackgroundColor = Color3.fromRGB(25, 65, 25),
        TertiaryBackgroundColor = Color3.fromRGB(45, 100, 45),
        TabBackgroundColor = Color3.fromRGB(35, 85, 35),
        PrimaryTextColor = Color3.fromRGB(210, 250, 210),
        SecondaryTextColor = Color3.fromRGB(190, 230, 190),
        PrimaryColor = Color3.fromRGB(80, 235, 80),
        ScrollingBarImageColor = Color3.fromRGB(70, 150, 70),
        Line = Color3.fromRGB(50, 110, 50)
    }
elseif getgenv().Theme == "Gold" then
    Theme = {
        PrimaryBackgroundColor = Color3.fromRGB(40, 30, 0),
        SecondaryBackgroundColor = Color3.fromRGB(70, 55, 10),
        TertiaryBackgroundColor = Color3.fromRGB(100, 80, 20),
        TabBackgroundColor = Color3.fromRGB(90, 65, 15),
        PrimaryTextColor = Color3.fromRGB(255, 220, 100),
        SecondaryTextColor = Color3.fromRGB(230, 190, 80),
        PrimaryColor = Color3.fromRGB(255, 200, 0),
        ScrollingBarImageColor = Color3.fromRGB(180, 140, 0),
        Line = Color3.fromRGB(120, 100, 20)
    }
elseif getgenv().Theme == "Cyber" then
    Theme = {
        PrimaryBackgroundColor = Color3.fromRGB(10, 10, 15),
        SecondaryBackgroundColor = Color3.fromRGB(20, 20, 25),
        TertiaryBackgroundColor = Color3.fromRGB(35, 35, 40),
        TabBackgroundColor = Color3.fromRGB(25, 25, 30),
        PrimaryTextColor = Color3.fromRGB(0, 255, 180),
        SecondaryTextColor = Color3.fromRGB(100, 255, 200),
        PrimaryColor = Color3.fromRGB(0, 255, 150),
        ScrollingBarImageColor = Color3.fromRGB(0, 200, 150),
        Line = Color3.fromRGB(0, 120, 100)
    }
elseif getgenv().Theme == "Ocean" then
    Theme = {
        PrimaryBackgroundColor = Color3.fromRGB(10, 25, 35),
        SecondaryBackgroundColor = Color3.fromRGB(20, 45, 65),
        TertiaryBackgroundColor = Color3.fromRGB(30, 65, 95),
        TabBackgroundColor = Color3.fromRGB(25, 55, 80),
        PrimaryTextColor = Color3.fromRGB(200, 240, 255),
        SecondaryTextColor = Color3.fromRGB(170, 210, 230),
        PrimaryColor = Color3.fromRGB(0, 170, 255),
        ScrollingBarImageColor = Color3.fromRGB(0, 140, 200),
        Line = Color3.fromRGB(0, 100, 150)
    }
elseif getgenv().Theme == "Sunset" then
    Theme = {
        PrimaryBackgroundColor = Color3.fromRGB(45, 20, 30),
        SecondaryBackgroundColor = Color3.fromRGB(70, 35, 40),
        TertiaryBackgroundColor = Color3.fromRGB(100, 60, 60),
        TabBackgroundColor = Color3.fromRGB(85, 45, 50),
        PrimaryTextColor = Color3.fromRGB(255, 200, 180),
        SecondaryTextColor = Color3.fromRGB(230, 170, 150),
        PrimaryColor = Color3.fromRGB(255, 100, 80),
        ScrollingBarImageColor = Color3.fromRGB(200, 80, 60),
        Line = Color3.fromRGB(140, 60, 50)
    }
elseif getgenv().Theme == "Pink" then
    Theme = {
        PrimaryBackgroundColor = Color3.fromRGB(60, 30, 50),
        SecondaryBackgroundColor = Color3.fromRGB(80, 40, 60),
        TertiaryBackgroundColor = Color3.fromRGB(100, 50, 70),
        TabBackgroundColor = Color3.fromRGB(90, 45, 65),
        PrimaryTextColor = Color3.fromRGB(255, 200, 230),
        SecondaryTextColor = Color3.fromRGB(240, 180, 220),
        PrimaryColor = Color3.fromRGB(255, 105, 180),
        ScrollingBarImageColor = Color3.fromRGB(200, 80, 150),
        Line = Color3.fromRGB(150, 60, 120)
    }
elseif getgenv().Theme == "DarkMode" then
    Theme = {
        PrimaryBackgroundColor = Color3.fromRGB(25, 25, 25),
        SecondaryBackgroundColor = Color3.fromRGB(35, 35, 35),
        TertiaryBackgroundColor = Color3.fromRGB(50, 50, 50),
        TabBackgroundColor = Color3.fromRGB(40, 40, 40),
        PrimaryTextColor = Color3.fromRGB(230, 230, 230),
        SecondaryTextColor = Color3.fromRGB(180, 180, 180),
        PrimaryColor = Color3.fromRGB(90, 90, 255),
        ScrollingBarImageColor = Color3.fromRGB(70, 70, 200),
        Line = Color3.fromRGB(60, 60, 150)
    }
elseif getgenv().Theme == "LightMode" then
    Theme = {
        PrimaryBackgroundColor = Color3.fromRGB(240, 240, 240),
        SecondaryBackgroundColor = Color3.fromRGB(255, 255, 255),
        TertiaryBackgroundColor = Color3.fromRGB(220, 220, 220),
        TabBackgroundColor = Color3.fromRGB(230, 230, 230),
        PrimaryTextColor = Color3.fromRGB(30, 30, 30),
        SecondaryTextColor = Color3.fromRGB(80, 80, 80),
        PrimaryColor = Color3.fromRGB(100, 100, 255),
        ScrollingBarImageColor = Color3.fromRGB(180, 180, 255),
        Line = Color3.fromRGB(150, 150, 200)
    }
else
    Theme = {
        PrimaryBackgroundColor = Color3.fromRGB(45, 15, 15),
        SecondaryBackgroundColor = Color3.fromRGB(65, 25, 25),
        TertiaryBackgroundColor = Color3.fromRGB(100, 45, 45),
        TabBackgroundColor = Color3.fromRGB(85, 35, 35),
        PrimaryTextColor = Color3.fromRGB(250, 210, 210),
        SecondaryTextColor = Color3.fromRGB(230, 190, 190),
        PrimaryColor = Color3.fromRGB(235, 80, 80),
        ScrollingBarImageColor = Color3.fromRGB(150, 70, 70),
        Line = Color3.fromRGB(110, 50, 50)
    }
end


local ThemeObjects = {}

for themeIndexName, _ in pairs(Theme) do
	ThemeObjects[themeIndexName] = {}
end

function Theme:registerToObjects(objects: table, elementType: string)
	for _, data in ipairs(objects) do
		if data.object.Name == "Frame" or data.object.Name == "Line" or data.object.Name == "CurrentTabLabel" or data.object.Name == "SubTabs" then
			for _, theme in pairs(data.theme) do
				data.object[data.property] = Theme[theme]
			end
		end
	end

	for _, data in pairs(objects) do
		for _, theme in pairs(data.theme) do
			if data.circleOn then
				table.insert(ThemeObjects[theme], {object = data.object, property = data.property, circleOn = data.circleOn})
			else
				table.insert(ThemeObjects[theme], {object = data.object, property = data.property})

				-- don't do return since it stops the for loop, tab and subtab do tweens to set the colors so this is nice for me!
				if (theme ~= "PrimaryColor" and (elementType ~= "Tab" or elementType ~= "SubTab")) then
					data.object[data.property] = Theme[theme]
				end
			end
		end
	end
end

function Theme:setTheme(themeName: string, color: Color3)
	local tolerance = 0.01 -- 1% difference check

	local getDifference = function(colorPropertyOne, colorPropertyTwo)
		return math.abs(colorPropertyOne.R - colorPropertyTwo.R) + math.abs(colorPropertyOne.G - colorPropertyTwo.G) + math.abs(colorPropertyOne.B - colorPropertyTwo.B)
	end

	if themeName == "SecondaryTextColor" and getDifference(color, Theme["PrimaryColor"]) <= 0.01 then
		warn("conflicting " .. themeName .. " with " .. "PrimaryTextColor")
		return
	end

	if themeName == "PrimaryColor" and getDifference(color, Theme["SecondaryTextColor"]) <= 0.01 then
		warn("conflicting " .. themeName .. " with " .. "SecondaryTextColor")
		return
	end

	if themeName == "SecondaryBackgroundColor" and getDifference(color, Theme["PrimaryBackgroundColor"]) <= 0.01 then
		warn("conflicting " .. themeName .. " with " .. "PrimaryBackgroundColor")
		return
	end

	if themeName == "PrimaryBackgroundColor" and getDifference(color, Theme["SecondaryBackgroundColor"]) <= 0.01 then
		warn("conflicting " .. themeName .. " with " .. "SecondaryBackgroundColor")
		return
	end

	for _, data in ipairs(ThemeObjects[themeName]) do
		if getDifference(data.object[data.property], Theme[themeName]) <= tolerance then
			if not data.circleOn then
				data.object[data.property] = color
			end

			if themeName == "TertiaryBackgroundColor" and data.circleOn then
				data.object[data.property] = color
			end
		end
	end

	Theme[themeName] = color
end

return Theme
